<?php
echo "3. Дан код:<br>";
// class A {
//     public function foo() {
//         static $x = 0;
//         echo ++$x;
//     }
// }
// $a1 = new A();
// $a2 = new A();
// $a1->foo();
// $a2->foo();
// $a1->foo();
// $a2->foo();
echo "<br>Что он выведет на каждом шаге? Почему?<br>
Ответ: переменная объявлена статичной, поэтому принадлежит классу, а точнее ф-ии, 
а не объекту и с помощью префиксной формы инкремента увеличивается на один при каждом вызове ф-ии.
Т.к. ф-ия вызывается из одного класса, ко всем объектам применяется один счетчик, находящийся внутри класса, 
поэтому результат выводится 1234";
echo "<br>Немного изменим п.5:<br>";
// class A {
//     public function foo() {
//         static $x = 0;
//         echo ++$x;
//     }
// }
// class B extends A {
// }
// $a1 = new A();
// $b1 = new B();
// $a1->foo(); 
// $b1->foo(); 
// $a1->foo(); 
// $b1->foo();
echo "<br>4. Объясните результаты в этом случае.<br>
Ответ: Класс B наследуется от класса А, т.е. публичная ф-ция из родительского 
класса \"копируется\" в дочерний и работает там независимо от родителя, т.к. у 
этого класса будет своя статичная '$x' и так же как в задании выше с помощью инкремента 
значение увеличивается на 1. В каждом классе будет свой счетчик.";
echo "<br>5. *Дан код:";
class A {
    public function foo() {
        static $x = 0;
        echo ++$x;
    }
}
class B extends A {
}
$a1 = new A;
$b1 = new B;
$a1->foo(); 
$b1->foo(); 
$a1->foo(); 
$b1->foo(); 
echo "<br>Ответ такой же как в задании выше. Единственная разница между этим 
заданием и 4-ым - создание экземпляра. Когда экземпляр создается со скорками '()' - 
это значит, что вызывается конструктор, в который можно передать параметры для дальнейшего использования внутри ф-ий.";